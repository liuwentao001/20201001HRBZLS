CREATE OR REPLACE TRIGGER HRBZLS."TDB_METERMODEL" BEFORE DELETE
ON METERMODEL FOR EACH ROW
DECLARE
    INTEGRITY_ERROR  EXCEPTION;
    ERRNO            INTEGER;
    ERRMSG           CHAR(200);
    DUMMY            INTEGER;
    FOUND            BOOLEAN;
    --  DECLARATION OF DELETEPARENTRESTRICT CONSTRAINT FOR "METERMAXCODE"
    CURSOR CFK1_METERMAXCODE(VAR_MMID VARCHAR) IS
       SELECT 1
       FROM   METERMAXCODE
       WHERE  MMCMMID = VAR_MMID
        AND   VAR_MMID IS NOT NULL;
    --  DECLARATION OF DELETEPARENTRESTRICT CONSTRAINT FOR "METERDOC"
    CURSOR CFK2_METERDOC(VAR_MMID VARCHAR) IS
       SELECT 1
       FROM   METERDOC
       WHERE  MDMODEL = VAR_MMID
        AND   VAR_MMID IS NOT NULL;

BEGIN
  if nvl(fsyspara('data'),'N')='Y' then
     return;
  end if;
    --  CANNOT DELETE PARENT "METERMODEL" IF CHILDREN STILL EXIST IN "METERMAXCODE"
    OPEN  CFK1_METERMAXCODE(:OLD.MMID);
    FETCH CFK1_METERMAXCODE INTO DUMMY;
    FOUND := CFK1_METERMAXCODE%FOUND;
    close CFK1_METERMAXCODE;
    if found then
       errno  := -20006;
       errmsg := 'CHILDREN STILL EXIST IN "METERMAXCODE". CANNOT DELETE PARENT "METERMODEL".';
       raise integrity_error;
    end if;

    --  Cannot delete parent "METERMODEL" if children still exist in "METERDOC"
    open  CFK2_METERDOC(:old.MMID);
    fetch CFK2_METERDOC into dummy;
    found := CFK2_METERDOC%FOUND;
    CLOSE CFK2_METERDOC;
    IF FOUND THEN
       ERRNO  := -20006;
       ERRMSG := 'CHILDREN STILL EXIST IN "METERDOC". CANNOT DELETE PARENT "METERMODEL".';
       RAISE INTEGRITY_ERROR;
    END IF;


--  ERRORS HANDLING
EXCEPTION
    WHEN INTEGRITY_ERROR THEN
       RAISE_APPLICATION_ERROR(ERRNO, ERRMSG);
END;
/

