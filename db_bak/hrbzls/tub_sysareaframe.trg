CREATE OR REPLACE TRIGGER HRBZLS."TUB_SYSAREAFRAME" BEFORE UPDATE
OF SAFID,
   SAFSMFID
ON SYSAREAFRAME FOR EACH ROW
DECLARE
  INTEGRITY_ERROR EXCEPTION;
  ERRNO  INTEGER;
  ERRMSG CHAR(200);
  DUMMY  INTEGER;
  FOUND  BOOLEAN;
  SEQ    NUMBER;
  --  DECLARATION OF UPDATECHILDPARENTEXIST CONSTRAINT FOR THE PARENT "SYSMANAFRAME"
  CURSOR CPK1_SYSAREAFRAME(VAR_SAFSMFID VARCHAR) IS
    SELECT 1
      FROM SYSMANAFRAME
     WHERE SMFID = VAR_SAFSMFID
       AND VAR_SAFSMFID IS NOT NULL;

BEGIN
  IF NVL(FSYSPARA('data'), 'N') = 'Y' THEN
    RETURN;
  END IF;
  SEQ := INTEGRITYPACKAGE.GETNESTLEVEL;
  --  PARENT "SYSMANAFRAME" MUST EXIST WHEN UPDATING A CHILD IN "SYSAREAFRAME"
  IF (:NEW.SAFSMFID IS NOT NULL) AND (SEQ = 0) THEN
    OPEN CPK1_SYSAREAFRAME(:NEW.SAFSMFID);
    FETCH CPK1_SYSAREAFRAME
      INTO DUMMY;
    FOUND := CPK1_SYSAREAFRAME%FOUND;
    CLOSE CPK1_SYSAREAFRAME;
    IF NOT FOUND THEN
      ERRNO  := -20003;
      ERRMSG := 'PARENT DOES NOT EXIST IN "SYSMANAFRAME". CANNOT UPDATE CHILD IN "SYSAREAFRAME".';
      RAISE INTEGRITY_ERROR;
    END IF;
  END IF;
  /*  IF :NEW.SAFFLAG = 'Y' THEN
    INSERT INTO SYSAREAPARA
    VALUES
      (:NEW.SAFID, 'MICODE', '¿Í»§´úÂë', '', '');
  ELSE
    DELETE SYSAREAPARA WHERE SMPID = :OLD.SAFID;
  END IF;*/

  --  ERRORS HANDLING
EXCEPTION
  WHEN INTEGRITY_ERROR THEN
    RAISE_APPLICATION_ERROR(ERRNO, ERRMSG);
END;
/

