CREATE OR REPLACE TRIGGER HRBZLS."TDB_METERINFO" BEFORE DELETE
ON METERINFO FOR EACH ROW
DECLARE
    INTEGRITY_ERROR  EXCEPTION;
    ERRNO            INTEGER;
    ERRMSG           CHAR(200);
    DUMMY            INTEGER;
    FOUND            BOOLEAN;
    --  DECLARATION OF DELETEPARENTRESTRICT CONSTRAINT FOR "PRICESPECIFYDETAIL"
    CURSOR CFK1_PRICESPECIFYDETAIL(VAR_MICID VARCHAR,
                    VAR_MIID VARCHAR) IS
       SELECT 1
       FROM   PRICESPECIFYDETAIL
       WHERE  PSDCID = VAR_MICID
        AND   PSDMID = VAR_MIID
        AND   VAR_MICID IS NOT NULL
        AND   VAR_MIID IS NOT NULL;
    --  DECLARATION OF DELETEPARENTRESTRICT CONSTRAINT FOR "PRICEMULTIDETAIL"
    CURSOR CFK2_PRICEMULTIDETAIL(VAR_MICID VARCHAR,
                    VAR_MIID VARCHAR) IS
       SELECT 1
       FROM   PRICEMULTIDETAIL
       WHERE  PMDCID = VAR_MICID
        AND   PMDMID = VAR_MIID
        AND   VAR_MICID IS NOT NULL
        AND   VAR_MIID IS NOT NULL;
    --  DECLARATION OF DELETEPARENTRESTRICT CONSTRAINT FOR "METERREAD"
    CURSOR CFK3_METERREAD(VAR_MIID VARCHAR) IS
       SELECT 1
       FROM   METERREAD
       WHERE  MRMPID = VAR_MIID
        AND   VAR_MIID IS NOT NULL;
    --  DECLARATION OF DELETEPARENTRESTRICT CONSTRAINT FOR "METERREAD"
    CURSOR CFK4_METERREAD(VAR_MIID VARCHAR) IS
       SELECT 1
       FROM   METERREAD
       WHERE  MRMID = VAR_MIID
        AND   VAR_MIID IS NOT NULL;
    --  DECLARATION OF DELETEPARENTRESTRICT CONSTRAINT FOR "METERADDSL"
    CURSOR CFK5_METERADDSL(VAR_MIID VARCHAR) IS
       SELECT 1
       FROM   METERADDSL
       WHERE  MASMID = VAR_MIID
        AND   VAR_MIID IS NOT NULL;
    --  DECLARATION OF DELETEPARENTRESTRICT CONSTRAINT FOR "METERDOC"
    CURSOR CFK7_METERDOC(VAR_MIID VARCHAR) IS
       SELECT 1
       FROM   METERDOC
       WHERE  MDMID = VAR_MIID
        AND   VAR_MIID IS NOT NULL;

BEGIN
  if nvl(fsyspara('data'),'N')='Y' then
     return;
  end if;
    --  CANNOT DELETE PARENT "METERINFO" IF CHILDREN STILL EXIST IN "PRICESPECIFYDETAIL"
    OPEN  CFK1_PRICESPECIFYDETAIL(:OLD.MICID,
                   :OLD.MIID);
    FETCH CFK1_PRICESPECIFYDETAIL INTO DUMMY;
    FOUND := CFK1_PRICESPECIFYDETAIL%FOUND;
    close CFK1_PRICESPECIFYDETAIL;
    if found then
       errno  := -20006;
       errmsg := 'CHILDREN STILL EXIST IN "PRICESPECIFYDETAIL". CANNOT DELETE PARENT "METERINFO".';
       raise integrity_error;
    end if;

    --  Cannot delete parent "METERINFO" if children still exist in "PRICEMULTIDETAIL"
    open  CFK2_PRICEMULTIDETAIL(:old.MICID,
                   :old.MIID);
    fetch CFK2_PRICEMULTIDETAIL into dummy;
    found := CFK2_PRICEMULTIDETAIL%FOUND;
    CLOSE CFK2_PRICEMULTIDETAIL;
    IF FOUND THEN
       ERRNO  := -20006;
       ERRMSG := 'CHILDREN STILL EXIST IN "PRICEMULTIDETAIL". CANNOT DELETE PARENT "METERINFO".';
       RAISE INTEGRITY_ERROR;
    END IF;

    --  CANNOT DELETE PARENT "METERINFO" IF CHILDREN STILL EXIST IN "METERREAD"
    OPEN  CFK3_METERREAD(:OLD.MIID);
    FETCH CFK3_METERREAD INTO DUMMY;
    FOUND := CFK3_METERREAD%FOUND;
    close CFK3_METERREAD;
    if found then
       errno  := -20006;
       errmsg := 'CHILDREN STILL EXIST IN "METERREAD". CANNOT DELETE PARENT "METERINFO".';
       raise integrity_error;
    end if;

    --  Cannot delete parent "METERINFO" if children still exist in "METERREAD"
    open  CFK4_METERREAD(:old.MIID);
    fetch CFK4_METERREAD into dummy;
    found := CFK4_METERREAD%FOUND;
    CLOSE CFK4_METERREAD;
    IF FOUND THEN
       ERRNO  := -20006;
       ERRMSG := 'CHILDREN STILL EXIST IN "METERREAD". CANNOT DELETE PARENT "METERINFO".';
       RAISE INTEGRITY_ERROR;
    END IF;

    --  CANNOT DELETE PARENT "METERINFO" IF CHILDREN STILL EXIST IN "METERADDSL"
    OPEN  CFK5_METERADDSL(:OLD.MIID);
    FETCH CFK5_METERADDSL INTO DUMMY;
    FOUND := CFK5_METERADDSL%FOUND;
    close CFK5_METERADDSL;
    if found then
       errno  := -20006;
       errmsg := 'CHILDREN STILL EXIST IN "METERADDSL". CANNOT DELETE PARENT "METERINFO".';
       raise integrity_error;
    end if;

    --  Cannot delete parent "METERINFO" if children still exist in "METERDOC"
    open  CFK7_METERDOC(:old.MIID);
    fetch CFK7_METERDOC into dummy;
    found := CFK7_METERDOC%FOUND;
    CLOSE CFK7_METERDOC;
    IF FOUND THEN
       ERRNO  := -20006;
       ERRMSG := 'CHILDREN STILL EXIST IN "METERDOC". CANNOT DELETE PARENT "METERINFO".';
       RAISE INTEGRITY_ERROR;
    END IF;


--  ERRORS HANDLING
EXCEPTION
    WHEN INTEGRITY_ERROR THEN
       RAISE_APPLICATION_ERROR(ERRNO, ERRMSG);
END;
/

