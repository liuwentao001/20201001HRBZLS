CREATE OR REPLACE TRIGGER HRBZLS."TIB_SYSFACEJOIN1" BEFORE INSERT
ON SYSFACEJOIN1 FOR EACH ROW
DECLARE
    INTEGRITY_ERROR  EXCEPTION;
    ERRNO            INTEGER;
    ERRMSG           CHAR(200);
    DUMMY            INTEGER;
    FOUND            BOOLEAN;
    --  DECLARATION OF INSERTCHILDPARENTEXIST CONSTRAINT FOR THE PARENT "SYSFACELIST2"
    CURSOR CPK1_SYSFACEJOIN1(VAR_AFJPID VARCHAR) IS
       SELECT 1
       FROM   SYSFACELIST2
       WHERE  SFLID = VAR_AFJPID
        AND   VAR_AFJPID IS NOT NULL;
    --  DECLARATION OF INSERTCHILDPARENTEXIST CONSTRAINT FOR THE PARENT "METERFACE"
    CURSOR CPK2_SYSFACEJOIN1(VAR_AFJCID VARCHAR) IS
       SELECT 1
       FROM   METERFACE
       WHERE  MFID = VAR_AFJCID
        AND   VAR_AFJCID IS NOT NULL;

BEGIN
  if nvl(fsyspara('data'),'N')='Y' then
     return;
  end if;
    --  PARENT "SYSFACELIST2" MUST EXIST WHEN INSERTING A CHILD IN "SYSFACEJOIN1"
    IF :NEW.AFJPID IS NOT NULL THEN
       OPEN  CPK1_SYSFACEJOIN1(:NEW.AFJPID);
       FETCH CPK1_SYSFACEJOIN1 INTO DUMMY;
       FOUND := CPK1_SYSFACEJOIN1%FOUND;
       close CPK1_SYSFACEJOIN1;
       if not found then
          errno  := -20002;
          errmsg := 'PARENT DOES NOT EXIST IN "SYSFACELIST2". CANNOT CREATE CHILD IN "SYSFACEJOIN1".';
          raise integrity_error;
       end if;
    end if;

    --  Parent "METERFACE" must exist when inserting a child in "SYSFACEJOIN1"
    if :new.AFJCID is not null then
       open  CPK2_SYSFACEJOIN1(:new.AFJCID);
       fetch CPK2_SYSFACEJOIN1 into dummy;
       found := CPK2_SYSFACEJOIN1%FOUND;
       CLOSE CPK2_SYSFACEJOIN1;
       IF NOT FOUND THEN
          ERRNO  := -20002;
          ERRMSG := 'PARENT DOES NOT EXIST IN "METERFACE". CANNOT CREATE CHILD IN "SYSFACEJOIN1".';
          RAISE INTEGRITY_ERROR;
       END IF;
    END IF;


--  ERRORS HANDLING
EXCEPTION
    WHEN INTEGRITY_ERROR THEN
       RAISE_APPLICATION_ERROR(ERRNO, ERRMSG);
END;
/

