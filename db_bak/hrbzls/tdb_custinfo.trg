CREATE OR REPLACE TRIGGER HRBZLS."TDB_CUSTINFO" BEFORE DELETE
ON CUSTINFO FOR EACH ROW
DECLARE
    INTEGRITY_ERROR  EXCEPTION;
    ERRNO            INTEGER;
    ERRMSG           CHAR(200);
    DUMMY            INTEGER;
    FOUND            BOOLEAN;
    --  DECLARATION OF DELETEPARENTRESTRICT CONSTRAINT FOR "METERINFO"
    CURSOR CFK1_METERINFO(VAR_CIID VARCHAR) IS
       SELECT 1
       FROM   METERINFO
       WHERE  MICID = VAR_CIID
        AND   VAR_CIID IS NOT NULL;
    --  DECLARATION OF DELETEPARENTRESTRICT CONSTRAINT FOR "RECLIST"
    CURSOR CFK2_RECLIST(VAR_CIID VARCHAR) IS
       SELECT 1
       FROM   RECLIST
       WHERE  RLCID = VAR_CIID
        AND   VAR_CIID IS NOT NULL;

BEGIN
  if nvl(fsyspara('data'),'N')='Y' then
     return;
  end if;
    --  CANNOT DELETE PARENT "CUSTINFO" IF CHILDREN STILL EXIST IN "METERINFO"
    OPEN  CFK1_METERINFO(:OLD.CIID);
    FETCH CFK1_METERINFO INTO DUMMY;
    FOUND := CFK1_METERINFO%FOUND;
    close CFK1_METERINFO;
    if found then
       errno  := -20006;
       errmsg := 'CHILDREN STILL EXIST IN "METERINFO". CANNOT DELETE PARENT "CUSTINFO".';
       raise integrity_error;
    end if;

    --  Cannot delete parent "CUSTINFO" if children still exist in "RECLIST"
    open  CFK2_RECLIST(:old.CIID);
    fetch CFK2_RECLIST into dummy;
    found := CFK2_RECLIST%FOUND;
    CLOSE CFK2_RECLIST;
    IF FOUND THEN
       ERRNO  := -20006;
       ERRMSG := 'CHILDREN STILL EXIST IN "RECLIST". CANNOT DELETE PARENT "CUSTINFO".';
       RAISE INTEGRITY_ERROR;
    END IF;


--  ERRORS HANDLING
EXCEPTION
    WHEN INTEGRITY_ERROR THEN
       RAISE_APPLICATION_ERROR(ERRNO, ERRMSG);
END;
/

