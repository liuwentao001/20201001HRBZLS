CREATE OR REPLACE TRIGGER HRBZLS."TIB_METERINFO" BEFORE INSERT
ON METERINFO FOR EACH ROW
DECLARE
    INTEGRITY_ERROR  EXCEPTION;
    ERRNO            INTEGER;
    ERRMSG           CHAR(200);
    DUMMY            INTEGER;
    FOUND            BOOLEAN;
    --  DECLARATION OF INSERTCHILDPARENTEXIST CONSTRAINT FOR THE PARENT "CUSTINFO"
    CURSOR CPK1_METERINFO(VAR_MICID VARCHAR) IS
       SELECT 1
       FROM   CUSTINFO
       WHERE  CIID = VAR_MICID
        AND   VAR_MICID IS NOT NULL;
    --  DECLARATION OF INSERTCHILDPARENTEXIST CONSTRAINT FOR THE PARENT "BOOKFRAME"
    CURSOR CPK2_METERINFO(VAR_MIBFID VARCHAR) IS
       SELECT 1
       FROM   BOOKFRAME
       WHERE  BFID = VAR_MIBFID
        AND   VAR_MIBFID IS NOT NULL;
    --  DECLARATION OF INSERTCHILDPARENTEXIST CONSTRAINT FOR THE PARENT "SYSMANAFRAME"
    CURSOR CPK3_METERINFO(VAR_MISMFID VARCHAR) IS
       SELECT 1
       FROM   SYSMANAFRAME
       WHERE  SMFID = VAR_MISMFID
        AND   VAR_MISMFID IS NOT NULL;
    --  DECLARATION OF INSERTCHILDPARENTEXIST CONSTRAINT FOR THE PARENT "SYSMETERTYPE"
    CURSOR CPK4_METERINFO(VAR_MITYPE VARCHAR) IS
       SELECT 1
       FROM   SYSMETERTYPE
       WHERE  SMTID = VAR_MITYPE
        AND   VAR_MITYPE IS NOT NULL;
    --  DECLARATION OF INSERTCHILDPARENTEXIST CONSTRAINT FOR THE PARENT "SYSREADTYPE"
    CURSOR CPK5_METERINFO(VAR_MIRTID VARCHAR) IS
       SELECT 1
       FROM   SYSREADTYPE
       WHERE  SRTID = VAR_MIRTID
        AND   VAR_MIRTID IS NOT NULL;
    --  DECLARATION OF INSERTCHILDPARENTEXIST CONSTRAINT FOR THE PARENT "SYSMETERSTATUS"
    CURSOR CPK6_METERINFO(VAR_MISTATUS VARCHAR) IS
       SELECT 1
       FROM   SYSMETERSTATUS
       WHERE  SMSID = VAR_MISTATUS
        AND   VAR_MISTATUS IS NOT NULL;
    --  DECLARATION OF INSERTCHILDPARENTEXIST CONSTRAINT FOR THE PARENT "METERSORTFRAME"
    CURSOR CPK7_METERINFO(VAR_MISTID VARCHAR) IS
       SELECT 1
       FROM   METERSORTFRAME
       WHERE  MSFID = VAR_MISTID
        AND   VAR_MISTID IS NOT NULL;
    --  DECLARATION OF INSERTCHILDPARENTEXIST CONSTRAINT FOR THE PARENT "METERFACE"
    CURSOR CPK8_METERINFO(VAR_MIFACE VARCHAR) IS
       SELECT 1
       FROM   METERFACE
       WHERE  MFID = VAR_MIFACE
        AND   VAR_MIFACE IS NOT NULL;
    --  DECLARATION OF INSERTCHILDPARENTEXIST CONSTRAINT FOR THE PARENT "READPRICE"
    CURSOR CPK9_METERINFO(VAR_MIRPID VARCHAR) IS
       SELECT 1
       FROM   READPRICE
       WHERE  RPID = VAR_MIRPID
        AND   VAR_MIRPID IS NOT NULL;
    --  DECLARATION OF INSERTCHILDPARENTEXIST CONSTRAINT FOR THE PARENT "SYSAREAFRAME"
    CURSOR CPK10_METERINFO(VAR_MISAFID VARCHAR) IS
       SELECT 1
       FROM   SYSAREAFRAME
       WHERE  SAFID = VAR_MISAFID
        AND   VAR_MISAFID IS NOT NULL;
    --  DECLARATION OF INSERTCHILDPARENTEXIST CONSTRAINT FOR THE PARENT "SYSCHARGETYPE"
    CURSOR CPK11_METERINFO(VAR_MICHARGETYPE VARCHAR) IS
       SELECT 1
       FROM   SYSCHARGETYPE
       WHERE  SCTID = VAR_MICHARGETYPE
        AND   VAR_MICHARGETYPE IS NOT NULL;
    --  DECLARATION OF INSERTCHILDPARENTEXIST CONSTRAINT FOR THE PARENT "PRICEFRAME"
    CURSOR CPK12_METERINFO(VAR_MIPFID VARCHAR) IS
       SELECT 1
       FROM   PRICEFRAME
       WHERE  PFID = VAR_MIPFID
        AND   VAR_MIPFID IS NOT NULL;

BEGIN
  if nvl(fsyspara('data'),'N')='Y' then
     return;
  end if;
    --  PARENT "CUSTINFO" MUST EXIST WHEN INSERTING A CHILD IN "METERINFO"
    IF :NEW.MICID IS NOT NULL THEN
       OPEN  CPK1_METERINFO(:NEW.MICID);
       FETCH CPK1_METERINFO INTO DUMMY;
       FOUND := CPK1_METERINFO%FOUND;
       close CPK1_METERINFO;
       if not found then
          errno  := -20002;
          errmsg := 'PARENT DOES NOT EXIST IN "CUSTINFO". CANNOT CREATE CHILD IN "METERINFO".';
          raise integrity_error;
       end if;
    end if;

    --  Parent "BOOKFRAME" must exist when inserting a child in "METERINFO"
    if :new.MIBFID is not null then
       open  CPK2_METERINFO(:new.MIBFID);
       fetch CPK2_METERINFO into dummy;
       found := CPK2_METERINFO%FOUND;
       CLOSE CPK2_METERINFO;
       IF NOT FOUND THEN
          ERRNO  := -20002;
          ERRMSG := 'PARENT DOES NOT EXIST IN "BOOKFRAME". CANNOT CREATE CHILD IN "METERINFO".';
          RAISE INTEGRITY_ERROR;
       END IF;
    END IF;

    --  PARENT "SYSMANAFRAME" MUST EXIST WHEN INSERTING A CHILD IN "METERINFO"
    IF :NEW.MISMFID IS NOT NULL THEN
       OPEN  CPK3_METERINFO(:NEW.MISMFID);
       FETCH CPK3_METERINFO INTO DUMMY;
       FOUND := CPK3_METERINFO%FOUND;
       close CPK3_METERINFO;
       if not found then
          errno  := -20002;
          errmsg := 'PARENT DOES NOT EXIST IN "SYSMANAFRAME". CANNOT CREATE CHILD IN "METERINFO".';
          raise integrity_error;
       end if;
    end if;

    --  Parent "SYSMETERTYPE" must exist when inserting a child in "METERINFO"
    if :new.MITYPE is not null then
       open  CPK4_METERINFO(:new.MITYPE);
       fetch CPK4_METERINFO into dummy;
       found := CPK4_METERINFO%FOUND;
       CLOSE CPK4_METERINFO;
       IF NOT FOUND THEN
          ERRNO  := -20002;
          ERRMSG := 'PARENT DOES NOT EXIST IN "SYSMETERTYPE". CANNOT CREATE CHILD IN "METERINFO".';
          RAISE INTEGRITY_ERROR;
       END IF;
    END IF;

    --  PARENT "SYSREADTYPE" MUST EXIST WHEN INSERTING A CHILD IN "METERINFO"
    IF :NEW.MIRTID IS NOT NULL THEN
       OPEN  CPK5_METERINFO(:NEW.MIRTID);
       FETCH CPK5_METERINFO INTO DUMMY;
       FOUND := CPK5_METERINFO%FOUND;
       close CPK5_METERINFO;
       if not found then
          errno  := -20002;
          errmsg := 'PARENT DOES NOT EXIST IN "SYSREADTYPE". CANNOT CREATE CHILD IN "METERINFO".';
          raise integrity_error;
       end if;
    end if;

    --  Parent "SYSMETERSTATUS" must exist when inserting a child in "METERINFO"
    if :new.MISTATUS is not null then
       open  CPK6_METERINFO(:new.MISTATUS);
       fetch CPK6_METERINFO into dummy;
       found := CPK6_METERINFO%FOUND;
       CLOSE CPK6_METERINFO;
       IF NOT FOUND THEN
          ERRNO  := -20002;
          ERRMSG := 'PARENT DOES NOT EXIST IN "SYSMETERSTATUS". CANNOT CREATE CHILD IN "METERINFO".';
          RAISE INTEGRITY_ERROR;
       END IF;
    END IF;

    --  PARENT "METERSORTFRAME" MUST EXIST WHEN INSERTING A CHILD IN "METERINFO"
    IF :NEW.MISTID IS NOT NULL THEN
       OPEN  CPK7_METERINFO(:NEW.MISTID);
       FETCH CPK7_METERINFO INTO DUMMY;
       FOUND := CPK7_METERINFO%FOUND;
       close CPK7_METERINFO;
       if not found then
          errno  := -20002;
          errmsg := 'PARENT DOES NOT EXIST IN "METERSORTFRAME". CANNOT CREATE CHILD IN "METERINFO".';
          raise integrity_error;
       end if;
    end if;

    --  Parent "METERFACE" must exist when inserting a child in "METERINFO"
    if :new.MIFACE is not null then
       open  CPK8_METERINFO(:new.MIFACE);
       fetch CPK8_METERINFO into dummy;
       found := CPK8_METERINFO%FOUND;
       CLOSE CPK8_METERINFO;
       IF NOT FOUND THEN
          ERRNO  := -20002;
          ERRMSG := 'PARENT DOES NOT EXIST IN "METERFACE". CANNOT CREATE CHILD IN "METERINFO".';
          RAISE INTEGRITY_ERROR;
       END IF;
    END IF;

    --  PARENT "READPRICE" MUST EXIST WHEN INSERTING A CHILD IN "METERINFO"
    IF :NEW.MIRPID IS NOT NULL THEN
       OPEN  CPK9_METERINFO(:NEW.MIRPID);
       FETCH CPK9_METERINFO INTO DUMMY;
       FOUND := CPK9_METERINFO%FOUND;
       close CPK9_METERINFO;
       if not found then
          errno  := -20002;
          errmsg := 'PARENT DOES NOT EXIST IN "READPRICE". CANNOT CREATE CHILD IN "METERINFO".';
          raise integrity_error;
       end if;
    end if;

    --  Parent "SYSAREAFRAME" must exist when inserting a child in "METERINFO"
    if :new.MISAFID is not null then
       open  CPK10_METERINFO(:new.MISAFID);
       fetch CPK10_METERINFO into dummy;
       found := CPK10_METERINFO%FOUND;
       CLOSE CPK10_METERINFO;
       IF NOT FOUND THEN
          ERRNO  := -20002;
          ERRMSG := 'PARENT DOES NOT EXIST IN "SYSAREAFRAME". CANNOT CREATE CHILD IN "METERINFO".';
          RAISE INTEGRITY_ERROR;
       END IF;
    END IF;

    --  PARENT "SYSCHARGETYPE" MUST EXIST WHEN INSERTING A CHILD IN "METERINFO"
    IF :NEW.MICHARGETYPE IS NOT NULL THEN
       OPEN  CPK11_METERINFO(:NEW.MICHARGETYPE);
       FETCH CPK11_METERINFO INTO DUMMY;
       FOUND := CPK11_METERINFO%FOUND;
       close CPK11_METERINFO;
       if not found then
          errno  := -20002;
          errmsg := 'PARENT DOES NOT EXIST IN "SYSCHARGETYPE". CANNOT CREATE CHILD IN "METERINFO".';
          raise integrity_error;
       end if;
    end if;

    --  Parent "PRICEFRAME" must exist when inserting a child in "METERINFO"
    if :new.MIPFID is not null then
       open  CPK12_METERINFO(:new.MIPFID);
       fetch CPK12_METERINFO into dummy;
       found := CPK12_METERINFO%FOUND;
       CLOSE CPK12_METERINFO;
       IF NOT FOUND THEN
          ERRNO  := -20002;
          ERRMSG := 'PARENT DOES NOT EXIST IN "PRICEFRAME". CANNOT CREATE CHILD IN "METERINFO".';
          RAISE INTEGRITY_ERROR;
       END IF;
    END IF;


--  ERRORS HANDLING
EXCEPTION
    WHEN INTEGRITY_ERROR THEN
       RAISE_APPLICATION_ERROR(ERRNO, ERRMSG);
END;
/

