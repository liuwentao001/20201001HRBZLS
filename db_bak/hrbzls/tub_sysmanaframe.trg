CREATE OR REPLACE TRIGGER HRBZLS."TUB_SYSMANAFRAME" BEFORE UPDATE
OF SMFID,
   SMFTYPE
ON SYSMANAFRAME FOR EACH ROW
DECLARE
    INTEGRITY_ERROR  EXCEPTION;
    ERRNO            INTEGER;
    ERRMSG           CHAR(200);
    DUMMY            INTEGER;
    FOUND            BOOLEAN;
    SEQ NUMBER;
    --  DECLARATION OF UPDATECHILDPARENTEXIST CONSTRAINT FOR THE PARENT "SYSMANATYPE"
    CURSOR CPK1_SYSMANAFRAME(VAR_SMFTYPE VARCHAR) IS
       SELECT 1
       FROM   SYSMANATYPE
       WHERE  SMTID = VAR_SMFTYPE
        AND   VAR_SMFTYPE IS NOT NULL;
    --  DECLARATION OF UPDATEPARENTRESTRICT CONSTRAINT FOR "SYSMANAPARA"
    CURSOR CFK1_SYSMANAPARA(VAR_SMFID VARCHAR) IS
       SELECT 1
       FROM   SYSMANAPARA
       WHERE  SMPID = VAR_SMFID
        AND   VAR_SMFID IS NOT NULL;
    --  DECLARATION OF UPDATEPARENTRESTRICT CONSTRAINT FOR "BOOKFRAME"
    CURSOR CFK2_BOOKFRAME(VAR_SMFID VARCHAR) IS
       SELECT 1
       FROM   BOOKFRAME
       WHERE  BFSMFID = VAR_SMFID
        AND   VAR_SMFID IS NOT NULL;
    --  DECLARATION OF UPDATEPARENTRESTRICT CONSTRAINT FOR "CUSTINFO"
    CURSOR CFK3_CUSTINFO(VAR_SMFID VARCHAR) IS
       SELECT 1
       FROM   CUSTINFO
       WHERE  CISMFID = VAR_SMFID
        AND   VAR_SMFID IS NOT NULL;
    --  DECLARATION OF UPDATEPARENTRESTRICT CONSTRAINT FOR "METERINFO"
    CURSOR CFK4_METERINFO(VAR_SMFID VARCHAR) IS
       SELECT 1
       FROM   METERINFO
       WHERE  MISMFID = VAR_SMFID
        AND   VAR_SMFID IS NOT NULL;
    --  DECLARATION OF UPDATEPARENTRESTRICT CONSTRAINT FOR "METERREAD"
    CURSOR CFK5_METERREAD(VAR_SMFID VARCHAR) IS
       SELECT 1
       FROM   METERREAD
       WHERE  MRSMFID = VAR_SMFID
        AND   VAR_SMFID IS NOT NULL;
    --  DECLARATION OF UPDATEPARENTRESTRICT CONSTRAINT FOR "RECLIST"
    CURSOR CFK6_RECLIST(VAR_SMFID VARCHAR) IS
       SELECT 1
       FROM   RECLIST
       WHERE  RLSMFID = VAR_SMFID
        AND   VAR_SMFID IS NOT NULL;
    --  DECLARATION OF UPDATEPARENTRESTRICT CONSTRAINT FOR "RECLIST"
    CURSOR CFK7_RECLIST(VAR_SMFID VARCHAR) IS
       SELECT 1
       FROM   RECLIST
       WHERE  RLCSMFID = VAR_SMFID
        AND   VAR_SMFID IS NOT NULL;
    --  DECLARATION OF UPDATEPARENTRESTRICT CONSTRAINT FOR "RECLIST"
    CURSOR CFK8_RECLIST(VAR_SMFID VARCHAR) IS
       SELECT 1
       FROM   RECLIST
       WHERE  RLMSMFID = VAR_SMFID
        AND   VAR_SMFID IS NOT NULL;
    --  DECLARATION OF UPDATEPARENTRESTRICT CONSTRAINT FOR ""OS_SCHEDULER""
    CURSOR CFK9_OS_SCHEDULER(VAR_SMFID VARCHAR) IS
       SELECT 1
       FROM   "OS_SCHEDULER"
       WHERE  "SMFID" = VAR_SMFID
        AND   VAR_SMFID IS NOT NULL;

BEGIN
   if nvl(fsyspara('data'),'N')='Y' then
     return;
  end if;
    SEQ := INTEGRITYPACKAGE.GETNESTLEVEL;
    --  PARENT "SYSMANATYPE" MUST EXIST WHEN UPDATING A CHILD IN "SYSMANAFRAME"
    IF (:NEW.SMFTYPE IS NOT NULL) AND (SEQ = 0) THEN
       OPEN  CPK1_SYSMANAFRAME(:NEW.SMFTYPE);
       FETCH CPK1_SYSMANAFRAME INTO DUMMY;
       FOUND := CPK1_SYSMANAFRAME%FOUND;
       close CPK1_SYSMANAFRAME;
       if not found then
          errno  := -20003;
          errmsg := 'PARENT DOES NOT EXIST IN "SYSMANATYPE". CANNOT UPDATE CHILD IN "SYSMANAFRAME".';
          raise integrity_error;
       end if;
    end if;

    --  Cannot modify parent code in "SYSMANAFRAME" if children still exist in "SYSMANAPARA"
    if (updating('SMFID') and :old.SMFID != :new.SMFID) then
       open  CFK1_SYSMANAPARA(:old.SMFID);
       fetch CFK1_SYSMANAPARA into dummy;
       found := CFK1_SYSMANAPARA%FOUND;
       CLOSE CFK1_SYSMANAPARA;
       IF FOUND THEN
          ERRNO  := -20005;
          ERRMSG := 'CHILDREN STILL EXIST IN "SYSMANAPARA". CANNOT MODIFY PARENT CODE IN "SYSMANAFRAME".';
          RAISE INTEGRITY_ERROR;
       END IF;
    END IF;

    --  CANNOT MODIFY PARENT CODE IN "SYSMANAFRAME" IF CHILDREN STILL EXIST IN "BOOKFRAME"
    IF (UPDATING('SMFID') AND :OLD.SMFID != :NEW.SMFID) THEN
       OPEN  CFK2_BOOKFRAME(:OLD.SMFID);
       FETCH CFK2_BOOKFRAME INTO DUMMY;
       FOUND := CFK2_BOOKFRAME%FOUND;
       close CFK2_BOOKFRAME;
       if found then
          errno  := -20005;
          errmsg := 'CHILDREN STILL EXIST IN "BOOKFRAME". CANNOT MODIFY PARENT CODE IN "SYSMANAFRAME".';
          raise integrity_error;
       end if;
    end if;

    --  Cannot modify parent code in "SYSMANAFRAME" if children still exist in "CUSTINFO"
    if (updating('SMFID') and :old.SMFID != :new.SMFID) then
       open  CFK3_CUSTINFO(:old.SMFID);
       fetch CFK3_CUSTINFO into dummy;
       found := CFK3_CUSTINFO%FOUND;
       CLOSE CFK3_CUSTINFO;
       IF FOUND THEN
          ERRNO  := -20005;
          ERRMSG := 'CHILDREN STILL EXIST IN "CUSTINFO". CANNOT MODIFY PARENT CODE IN "SYSMANAFRAME".';
          RAISE INTEGRITY_ERROR;
       END IF;
    END IF;

    --  CANNOT MODIFY PARENT CODE IN "SYSMANAFRAME" IF CHILDREN STILL EXIST IN "METERINFO"
    IF (UPDATING('SMFID') AND :OLD.SMFID != :NEW.SMFID) THEN
       OPEN  CFK4_METERINFO(:OLD.SMFID);
       FETCH CFK4_METERINFO INTO DUMMY;
       FOUND := CFK4_METERINFO%FOUND;
       close CFK4_METERINFO;
       if found then
          errno  := -20005;
          errmsg := 'CHILDREN STILL EXIST IN "METERINFO". CANNOT MODIFY PARENT CODE IN "SYSMANAFRAME".';
          raise integrity_error;
       end if;
    end if;

    --  Cannot modify parent code in "SYSMANAFRAME" if children still exist in "METERREAD"
    if (updating('SMFID') and :old.SMFID != :new.SMFID) then
       open  CFK5_METERREAD(:old.SMFID);
       fetch CFK5_METERREAD into dummy;
       found := CFK5_METERREAD%FOUND;
       CLOSE CFK5_METERREAD;
       IF FOUND THEN
          ERRNO  := -20005;
          ERRMSG := 'CHILDREN STILL EXIST IN "METERREAD". CANNOT MODIFY PARENT CODE IN "SYSMANAFRAME".';
          RAISE INTEGRITY_ERROR;
       END IF;
    END IF;

    --  CANNOT MODIFY PARENT CODE IN "SYSMANAFRAME" IF CHILDREN STILL EXIST IN "RECLIST"
    IF (UPDATING('SMFID') AND :OLD.SMFID != :NEW.SMFID) THEN
       OPEN  CFK6_RECLIST(:OLD.SMFID);
       FETCH CFK6_RECLIST INTO DUMMY;
       FOUND := CFK6_RECLIST%FOUND;
       close CFK6_RECLIST;
       if found then
          errno  := -20005;
          errmsg := 'CHILDREN STILL EXIST IN "RECLIST". CANNOT MODIFY PARENT CODE IN "SYSMANAFRAME".';
          raise integrity_error;
       end if;
    end if;

    --  Cannot modify parent code in "SYSMANAFRAME" if children still exist in "RECLIST"
    if (updating('SMFID') and :old.SMFID != :new.SMFID) then
       open  CFK7_RECLIST(:old.SMFID);
       fetch CFK7_RECLIST into dummy;
       found := CFK7_RECLIST%FOUND;
       CLOSE CFK7_RECLIST;
       IF FOUND THEN
          ERRNO  := -20005;
          ERRMSG := 'CHILDREN STILL EXIST IN "RECLIST". CANNOT MODIFY PARENT CODE IN "SYSMANAFRAME".';
          RAISE INTEGRITY_ERROR;
       END IF;
    END IF;

    --  CANNOT MODIFY PARENT CODE IN "SYSMANAFRAME" IF CHILDREN STILL EXIST IN "RECLIST"
    IF (UPDATING('SMFID') AND :OLD.SMFID != :NEW.SMFID) THEN
       OPEN  CFK8_RECLIST(:OLD.SMFID);
       FETCH CFK8_RECLIST INTO DUMMY;
       FOUND := CFK8_RECLIST%FOUND;
       close CFK8_RECLIST;
       if found then
          errno  := -20005;
          errmsg := 'CHILDREN STILL EXIST IN "RECLIST". CANNOT MODIFY PARENT CODE IN "SYSMANAFRAME".';
          raise integrity_error;
       end if;
    end if;

    --  Cannot modify parent code in "SYSMANAFRAME" if children still exist in ""OS_SCHEDULER""
    if (updating('SMFID') and :old.SMFID != :new.SMFID) then
       open  CFK9_OS_SCHEDULER(:old.SMFID);
       fetch CFK9_OS_SCHEDULER into dummy;
       found := CFK9_OS_SCHEDULER%FOUND;
       CLOSE CFK9_OS_SCHEDULER;
       IF FOUND THEN
          ERRNO  := -20005;
          ERRMSG := 'CHILDREN STILL EXIST IN ""OS_SCHEDULER"". CANNOT MODIFY PARENT CODE IN "SYSMANAFRAME".';
          RAISE INTEGRITY_ERROR;
       END IF;
    END IF;


--  ERRORS HANDLING
EXCEPTION
    WHEN INTEGRITY_ERROR THEN
       RAISE_APPLICATION_ERROR(ERRNO, ERRMSG);
END;
/

