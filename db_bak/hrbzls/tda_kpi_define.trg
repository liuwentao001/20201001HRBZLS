CREATE OR REPLACE TRIGGER HRBZLS."TDA_KPI_DEFINE" AFTER DELETE
ON KPI_DEFINE FOR EACH ROW
DECLARE
 CURSOR C_JOB(JOBWHAT IN VARCHAR2) IS
  SELECT * FROM ALL_JOBS AL WHERE AL.WHAT = JOBWHAT;
 INTEGRITY_ERROR EXCEPTION;
 ERRNO INTEGER;
 ERRMSG CHAR(200);
 DUMMY INTEGER;
 FOUND BOOLEAN;
JOB_WHAT VARCHAR(100);
    V_JOB           ALL_JOBS%ROWTYPE;
BEGIN
  if nvl(fsyspara('data'),'N')='Y' then
     return;
  end if;
 INTEGRITYPACKAGE.NEXTNESTLEVEL;
 -- DELETE ALL CHILDREN IN "kpi_subscribe"
 DELETE kpi_subscribe
 WHERE KT_ID = :OLD.KT_ID;
   -- DELETE ALL CHILDREN IN "kpi_method"
 DELETE kpi_method
 WHERE KT_ID = :OLD.KT_ID;
 INTEGRITYPACKAGE.PREVIOUSNESTLEVEL;
-- DELETE JOB
   JOB_WHAT     := 'PG_KPI.KPI_EXC(' || '''' || :OLD.KT_ID || '''' || ');';
--É¾³ýjob
      OPEN C_JOB(JOB_WHAT);
      LOOP
        FETCH C_JOB
          INTO V_JOB;
        EXIT WHEN C_JOB%NOTFOUND OR C_JOB%NOTFOUND IS NULL;
         dbms_job.remove
      (
        job    => V_JOB.JOB
      );
      END LOOP;

      IF c_job%isopen THEN
          CLOSE c_job;
      END IF;
EXCEPTION
 WHEN INTEGRITY_ERROR THEN
 BEGIN
 INTEGRITYPACKAGE.INITNESTLEVEL;
 RAISE_APPLICATION_ERROR(ERRNO, ERRMSG);
 END;
END;
/

