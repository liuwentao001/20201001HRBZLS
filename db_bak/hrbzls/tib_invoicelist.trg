CREATE OR REPLACE TRIGGER HRBZLS."TIB_INVOICELIST" BEFORE INSERT
ON INVOICELIST FOR EACH ROW
DECLARE
 INTEGRITY_ERROR EXCEPTION;
 ERRNO INTEGER;
 ERRMSG CHAR(200);
 DUMMY INTEGER;
 FOUND BOOLEAN;
 -- DECLARATION OF INSERTCHILDPARENTEXIST CONSTRAINT FOR THE PARENT "INVOICETYPE"
 CURSOR CPK1_INVOICELIST(VAR_ILTYPE VARCHAR) IS
 SELECT 1
 FROM INVOICETYPE
 WHERE ITID = VAR_ILTYPE
 AND VAR_ILTYPE IS NOT NULL;
 -- DECLARATION OF INSERTCHILDPARENTEXIST CONSTRAINT FOR THE PARENT "ACCOUNTCD"
 CURSOR CPK2_INVOICELIST(VAR_ILCD VARCHAR) IS
 SELECT 1
 FROM ACCOUNTCD
 WHERE ACDID = VAR_ILCD
 AND VAR_ILCD IS NOT NULL;

BEGIN
  if nvl(fsyspara('data'),'N')='Y' then
     return;
  end if;
 -- PARENT "INVOICETYPE" MUST EXIST WHEN INSERTING A CHILD IN "INVOICELIST"
 IF :NEW.ILTYPE IS NOT NULL THEN
 OPEN CPK1_INVOICELIST(:NEW.ILTYPE);
 FETCH CPK1_INVOICELIST INTO DUMMY;
 FOUND := CPK1_INVOICELIST%FOUND;
 close CPK1_INVOICELIST;
 if not found then
 errno := -20002;
 errmsg := 'PARENT DOES NOT EXIST IN "INVOICETYPE". CANNOT CREATE CHILD IN "INVOICELIST".';
 raise integrity_error;
 end if;
 end if;

 -- Parent "ACCOUNTCD" must exist when inserting a child in "INVOICELIST"
 if :new.ILCD is not null then
 open CPK2_INVOICELIST(:new.ILCD);
 fetch CPK2_INVOICELIST into dummy;
 found := CPK2_INVOICELIST%FOUND;
 CLOSE CPK2_INVOICELIST;
 IF NOT FOUND THEN
 ERRNO := -20002;
 ERRMSG := 'PARENT DOES NOT EXIST IN "ACCOUNTCD". CANNOT CREATE CHILD IN "INVOICELIST".';
 RAISE INTEGRITY_ERROR;
 END IF;
 END IF;


-- ERRORS HANDLING
EXCEPTION
 WHEN INTEGRITY_ERROR THEN
 RAISE_APPLICATION_ERROR(ERRNO, ERRMSG);
END;
/

