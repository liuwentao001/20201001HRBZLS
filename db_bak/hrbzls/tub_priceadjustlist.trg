CREATE OR REPLACE TRIGGER HRBZLS."TUB_PRICEADJUSTLIST" BEFORE UPDATE
OF PALID,
 PALTACTIC,
 PALMETHOD
ON PRICEADJUSTLIST FOR EACH ROW
DECLARE
 INTEGRITY_ERROR EXCEPTION;
 ERRNO INTEGER;
 ERRMSG CHAR(200);
 DUMMY INTEGER;
 FOUND BOOLEAN;
 SEQ NUMBER;
 -- DECLARATION OF UPDATECHILDPARENTEXIST CONSTRAINT FOR THE PARENT "PRICEADJUSTMETHOD"
 CURSOR CPK1_PRICEADJUSTLIST(VAR_PALMETHOD VARCHAR) IS
 SELECT 1
 FROM PRICEADJUSTMETHOD
 WHERE PAMID = VAR_PALMETHOD
 AND VAR_PALMETHOD IS NOT NULL;
 -- DECLARATION OF UPDATECHILDPARENTEXIST CONSTRAINT FOR THE PARENT "PRICEADJUSTTACTIC"
 CURSOR CPK2_PRICEADJUSTLIST(VAR_PALTACTIC VARCHAR) IS
 SELECT 1
 FROM PRICEADJUSTTACTIC
 WHERE PATID = VAR_PALTACTIC
 AND VAR_PALTACTIC IS NOT NULL;

BEGIN
  if nvl(fsyspara('data'),'N')='Y' then
     return;
  end if;
 SEQ := INTEGRITYPACKAGE.GETNESTLEVEL;
 -- PARENT "PRICEADJUSTMETHOD" MUST EXIST WHEN UPDATING A CHILD IN "PRICEADJUSTLIST"
 IF (:NEW.PALMETHOD IS NOT NULL) AND (SEQ = 0) THEN
 OPEN CPK1_PRICEADJUSTLIST(:NEW.PALMETHOD);
 FETCH CPK1_PRICEADJUSTLIST INTO DUMMY;
 FOUND := CPK1_PRICEADJUSTLIST%FOUND;
 close CPK1_PRICEADJUSTLIST;
 if not found then
 errno := -20003;
 errmsg := 'PARENT DOES NOT EXIST IN "PRICEADJUSTMETHOD". CANNOT UPDATE CHILD IN "PRICEADJUSTLIST".';
 raise integrity_error;
 end if;
 end if;

 -- Parent "PRICEADJUSTTACTIC" must exist when updating a child in "PRICEADJUSTLIST"
 if (:new.PALTACTIC is not null) and (seq = 0) then
 open CPK2_PRICEADJUSTLIST(:new.PALTACTIC);
 fetch CPK2_PRICEADJUSTLIST into dummy;
 found := CPK2_PRICEADJUSTLIST%FOUND;
 CLOSE CPK2_PRICEADJUSTLIST;
 IF NOT FOUND THEN
 ERRNO := -20003;
 ERRMSG := 'PARENT DOES NOT EXIST IN "PRICEADJUSTTACTIC". CANNOT UPDATE CHILD IN "PRICEADJUSTLIST".';
 RAISE INTEGRITY_ERROR;
 END IF;
 END IF;


-- ERRORS HANDLING
EXCEPTION
 WHEN INTEGRITY_ERROR THEN
 RAISE_APPLICATION_ERROR(ERRNO, ERRMSG);
END;
/

