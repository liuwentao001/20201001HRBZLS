CREATE OR REPLACE TRIGGER HRBZLS."TUB_SYSCUSTSTATUS" BEFORE UPDATE
OF SCSID
ON SYSCUSTSTATUS FOR EACH ROW
DECLARE
 INTEGRITY_ERROR EXCEPTION;
 ERRNO INTEGER;
 ERRMSG CHAR(200);
 DUMMY INTEGER;
 FOUND BOOLEAN;
 -- DECLARATION OF UPDATEPARENTRESTRICT CONSTRAINT FOR "CUSTINFO"
 CURSOR CFK1_CUSTINFO(VAR_SCSID VARCHAR) IS
 SELECT 1
 FROM CUSTINFO
 WHERE CISTATUS = VAR_SCSID
 AND VAR_SCSID IS NOT NULL;
 -- DECLARATION OF UPDATEPARENTRESTRICT CONSTRAINT FOR "RECLIST"
 CURSOR CFK2_RECLIST(VAR_SCSID VARCHAR) IS
 SELECT 1
 FROM RECLIST
 WHERE RLCSTATUS = VAR_SCSID
 AND VAR_SCSID IS NOT NULL;

BEGIN
   if nvl(fsyspara('data'),'N')='Y' then
     return;
  end if;
 -- CANNOT MODIFY PARENT CODE IN "SYSCUSTSTATUS" IF CHILDREN STILL EXIST IN "CUSTINFO"
 IF (UPDATING('SCSID') AND :OLD.SCSID != :NEW.SCSID) THEN
 OPEN CFK1_CUSTINFO(:OLD.SCSID);
 FETCH CFK1_CUSTINFO INTO DUMMY;
 FOUND := CFK1_CUSTINFO%FOUND;
 close CFK1_CUSTINFO;
 if found then
 errno := -20005;
 errmsg := 'CHILDREN STILL EXIST IN "CUSTINFO". CANNOT MODIFY PARENT CODE IN "SYSCUSTSTATUS".';
 raise integrity_error;
 end if;
 end if;

 -- Cannot modify parent code in "SYSCUSTSTATUS" if children still exist in "RECLIST"
 if (updating('SCSID') and :old.SCSID != :new.SCSID) then
 open CFK2_RECLIST(:old.SCSID);
 fetch CFK2_RECLIST into dummy;
 found := CFK2_RECLIST%FOUND;
 CLOSE CFK2_RECLIST;
 IF FOUND THEN
 ERRNO := -20005;
 ERRMSG := 'CHILDREN STILL EXIST IN "RECLIST". CANNOT MODIFY PARENT CODE IN "SYSCUSTSTATUS".';
 RAISE INTEGRITY_ERROR;
 END IF;
 END IF;


-- ERRORS HANDLING
EXCEPTION
 WHEN INTEGRITY_ERROR THEN
 RAISE_APPLICATION_ERROR(ERRNO, ERRMSG);
END;
/

