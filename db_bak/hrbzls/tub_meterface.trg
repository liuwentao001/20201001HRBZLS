CREATE OR REPLACE TRIGGER HRBZLS."TUB_METERFACE" BEFORE UPDATE
OF MFID
ON METERFACE FOR EACH ROW
DECLARE
    INTEGRITY_ERROR  EXCEPTION;
    ERRNO            INTEGER;
    ERRMSG           CHAR(200);
    DUMMY            INTEGER;
    FOUND            BOOLEAN;
    --  DECLARATION OF UPDATEPARENTRESTRICT CONSTRAINT FOR "METERINFO"
    CURSOR CFK1_METERINFO(VAR_MFID VARCHAR) IS
       SELECT 1
       FROM   METERINFO
       WHERE  MIFACE = VAR_MFID
        AND   VAR_MFID IS NOT NULL;
    --  DECLARATION OF UPDATEPARENTRESTRICT CONSTRAINT FOR "METERREAD"
    CURSOR CFK2_METERREAD(VAR_MFID VARCHAR) IS
       SELECT 1
       FROM   METERREAD
       WHERE  MRFACE = VAR_MFID
        AND   VAR_MFID IS NOT NULL;

BEGIN
   if nvl(fsyspara('data'),'N')='Y' then
     return;
  end if;
    --  CANNOT MODIFY PARENT CODE IN "METERFACE" IF CHILDREN STILL EXIST IN "METERINFO"
    IF (UPDATING('MFID') AND :OLD.MFID != :NEW.MFID) THEN
       OPEN  CFK1_METERINFO(:OLD.MFID);
       FETCH CFK1_METERINFO INTO DUMMY;
       FOUND := CFK1_METERINFO%FOUND;
       close CFK1_METERINFO;
       if found then
          errno  := -20005;
          errmsg := 'CHILDREN STILL EXIST IN "METERINFO". CANNOT MODIFY PARENT CODE IN "METERFACE".';
          raise integrity_error;
       end if;
    end if;

    --  Cannot modify parent code in "METERFACE" if children still exist in "METERREAD"
    if (updating('MFID') and :old.MFID != :new.MFID) then
       open  CFK2_METERREAD(:old.MFID);
       fetch CFK2_METERREAD into dummy;
       found := CFK2_METERREAD%FOUND;
       CLOSE CFK2_METERREAD;
       IF FOUND THEN
          ERRNO  := -20005;
          ERRMSG := 'CHILDREN STILL EXIST IN "METERREAD". CANNOT MODIFY PARENT CODE IN "METERFACE".';
          RAISE INTEGRITY_ERROR;
       END IF;
    END IF;


--  ERRORS HANDLING
EXCEPTION
    WHEN INTEGRITY_ERROR THEN
       RAISE_APPLICATION_ERROR(ERRNO, ERRMSG);
END;
/

