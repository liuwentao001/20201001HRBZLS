CREATE OR REPLACE TRIGGER HRBZLS."TUB_ERPFUNCMETHOD" BEFORE UPDATE
OF EFMFID,
 EFMMID
ON ERPFUNCMETHOD FOR EACH ROW
DECLARE
 INTEGRITY_ERROR EXCEPTION;
 ERRNO INTEGER;
 ERRMSG CHAR(200);
 DUMMY INTEGER;
 FOUND BOOLEAN;
 SEQ NUMBER;
 -- DECLARATION OF UPDATECHILDPARENTEXIST CONSTRAINT FOR THE PARENT "ERPFUNCTION"
 CURSOR CPK1_ERPFUNCMETHOD(VAR_EFMFID VARCHAR) IS
 SELECT 1
 FROM ERPFUNCTION
 WHERE EFID = VAR_EFMFID
 AND VAR_EFMFID IS NOT NULL;

BEGIN
  if nvl(fsyspara('data'),'N')='Y' then
     return;
  end if;
 SEQ := INTEGRITYPACKAGE.GETNESTLEVEL;
 -- PARENT "ERPFUNCTION" MUST EXIST WHEN UPDATING A CHILD IN "ERPFUNCMETHOD"
 IF (:NEW.EFMFID IS NOT NULL) AND (SEQ = 0) THEN
 OPEN CPK1_ERPFUNCMETHOD(:NEW.EFMFID);
 FETCH CPK1_ERPFUNCMETHOD INTO DUMMY;
 FOUND := CPK1_ERPFUNCMETHOD%FOUND;
 CLOSE CPK1_ERPFUNCMETHOD;
 IF NOT FOUND THEN
 ERRNO := -20003;
 ERRMSG := 'PARENT DOES NOT EXIST IN "ERPFUNCTION". CANNOT UPDATE CHILD IN "ERPFUNCMETHOD".';
 RAISE INTEGRITY_ERROR;
 END IF;
 END IF;


-- ERRORS HANDLING
EXCEPTION
 WHEN INTEGRITY_ERROR THEN
 RAISE_APPLICATION_ERROR(ERRNO, ERRMSG);
END;
/

