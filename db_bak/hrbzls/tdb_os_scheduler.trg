CREATE OR REPLACE TRIGGER HRBZLS."TDB_OS_SCHEDULER" BEFORE DELETE
ON "OS_SCHEDULER" FOR EACH ROW
DECLARE
 INTEGRITY_ERROR EXCEPTION;
 ERRNO INTEGER;
 ERRMSG CHAR(200);
 DUMMY INTEGER;
 FOUND BOOLEAN;
 -- DECLARATION OF DELETEPARENTRESTRICT CONSTRAINT FOR "OS_CURRENTSTEP"
 CURSOR CFK1_OS_CURRENTSTEP(VAR_ID VARCHAR) IS
 SELECT 1
 FROM OS_CURRENTSTEP
 WHERE OWNER = VAR_ID
 AND VAR_ID IS NOT NULL;
 -- DECLARATION OF DELETEPARENTRESTRICT CONSTRAINT FOR "OS_HISTORYSTEP"
 CURSOR CFK2_OS_HISTORYSTEP(VAR_ID VARCHAR) IS
 SELECT 1
 FROM OS_HISTORYSTEP
 WHERE OWNER = VAR_ID
 AND VAR_ID IS NOT NULL;

BEGIN
  if nvl(fsyspara('data'),'N')='Y' then
     return;
  end if;
 -- CANNOT DELETE PARENT ""OS_SCHEDULER"" IF CHILDREN STILL EXIST IN "OS_CURRENTSTEP"
 OPEN CFK1_OS_CURRENTSTEP(:OLD."ID");
 FETCH CFK1_OS_CURRENTSTEP INTO DUMMY;
 FOUND := CFK1_OS_CURRENTSTEP%FOUND;
 close CFK1_OS_CURRENTSTEP;
 if found then
 errno := -20006;
 errmsg := 'CHILDREN STILL EXIST IN "OS_CURRENTSTEP". CANNOT DELETE PARENT ""OS_SCHEDULER"".';
 raise integrity_error;
 end if;

 -- Cannot delete parent ""OS_SCHEDULER"" if children still exist in "OS_HISTORYSTEP"
 open CFK2_OS_HISTORYSTEP(:old."ID");
 fetch CFK2_OS_HISTORYSTEP into dummy;
 found := CFK2_OS_HISTORYSTEP%FOUND;
 CLOSE CFK2_OS_HISTORYSTEP;
 IF FOUND THEN
 ERRNO := -20006;
 ERRMSG := 'CHILDREN STILL EXIST IN "OS_HISTORYSTEP". CANNOT DELETE PARENT ""OS_SCHEDULER"".';
 RAISE INTEGRITY_ERROR;
 END IF;


-- ERRORS HANDLING
EXCEPTION
 WHEN INTEGRITY_ERROR THEN
 RAISE_APPLICATION_ERROR(ERRNO, ERRMSG);
END;
/

